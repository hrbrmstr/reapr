% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read-url.R
\name{reap_url}
\alias{reap_url}
\title{Read HTML content from a URL}
\usage{
reap_url(url, encoding = "", ...)
}
\arguments{
\item{url}{a URL to retrieve via \code{HTTP} \code{GET}}

\item{encoding}{override any passed-in (or server-neglected) encoding. Default
is \code{""} to let use the default behaviour of \code{\link[httr:GET]{httr::GET()}}.}

\item{...}{other parameters passed on to \code{\link[httr:GET]{httr::GET()}}}
}
\value{
a \code{reapr_doc} object
}
\description{
This function retrieves, parses and returns web content. See \code{Details} for
more information.
}
\details{
Web scraping is fraught with peril so the more help and metadata you can
retrieve while trying to extract content from semi-structured times the better.

This function:
\itemize{
\item Uses \code{\link[httr:GET]{httr::GET()}} to make web connections and retrieve content. This enables
it to behave more like an actual (non-javascript-enabled) browser. You can
pass anything \code{\link[httr:GET]{httr::GET()}} can handle to \code{...} (e.g. \code{\link[httr:user_agent]{httr::user_agent()}})
to have as much granular control over the interaction as possible.
\item Returns a richer set of data. After the \code{httr::response} object is obtained
many tasks are performed including:
\itemize{
\item timestamping the URL crawl
\item extraction of the asked-for URL and the final URL (in the case of redirects)
\item extraction of the IP address of the target server
\item extraction of both plaintext and parsed (\code{xml_document}) HTML
\item extraction of the plaintext webpage \code{<title>} (if any)
\item generation of a dynamic list tags in the document which can be
fed directly to HTML/XML search/retrieval function (which may speed
up node discover)
\item extraction of the text of all comments in the HTML document
\item inclusion of the full \code{httr::response} object with the returned object
\item extraction of the time it took to make the complete request
}
}

Finally, it works with other package member functions to check the validity
of the parsed \code{xml_document} and auto-regen the parse (since it has the full
content available to it) prior to any other operations. This also makes \code{reapr_doc}
object \emph{serializable} without having to spend your own cycles on that.
}
