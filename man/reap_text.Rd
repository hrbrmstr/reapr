% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reap-bits.R
\name{reap_text}
\alias{reap_text}
\alias{reap_name}
\alias{reap_children}
\alias{reap_attrs}
\alias{reap_attr}
\title{Reap text, names and attributes from HTML}
\usage{
reap_text(x, trim = TRUE)

reap_name(x)

reap_children(x)

reap_attrs(x)

reap_attr(x, name, otherwise = NA_character_)
}
\arguments{
\item{x}{anything the underlying \code{xml2} functions can take}

\item{trim}{if \code{TRUE} then trim whitespace. Unlike the \code{rvest} counterparts
this defaults to \code{TRUE}.}

\item{name}{attribute name to retrieve}

\item{otherwise}{what to return if \code{name} doesn't exist in a given node}
}
\description{
You need to pass in anyting the underlying \code{\link[xml2:xml_text]{xml2::xml_text()}},
\code{\link[xml2:xml_name]{xml2::xml_name()}}, \code{\link[xml2:xml_children]{xml2::xml_children()}}, \code{\link[xml2:xml_attrs]{xml2::xml_attrs()}},
or \code{\link[xml2:xml_attr]{xml2::xml_attr()}} expect. These are merely convenience wrappers
so you don't have to \code{library(xml2)}.
}
\details{
You \emph{can} pass in a \code{reapr_doc} \code{$parsed_html} full document if you
wish but you should really be working with the output of
\code{\link[=reap_nodes]{reap_nodes()}} or \code{\link[=reap_node]{reap_node()}} or the pre-extracted tags in the \code{$tag}
element of a \code{reapr_doc}.
}
\examples{
x <- reap_url("http://r-project.org/")
reap_text(x$tag$div)
reap_nodes(x, ".//*") \%>\% reap_name()
x$tag$div \%>\% reap_children()
reap_attrs(x$tag$div)
}
